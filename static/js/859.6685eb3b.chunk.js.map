{"version":3,"file":"static/js/859.6685eb3b.chunk.js","mappings":"oMAiBA,EAfkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA7C,UACE,uBAAII,OAFCD,EADC,KASjB,C,oHCGD,EAda,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,GAAmBI,MAAMC,QAAQC,IAC3D,GAAE,KAGD,6BACE,4CACA,SAACC,EAAA,EAAD,CAAWlB,OAAQU,MAGxB,C,uHChBKS,EAAW,gCACXC,EACJ,sNAEK,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,iGACCQ,EAAc,CAClBC,OAAQ,uBAEJC,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYR,GACzB,eAAgB,qBAGdS,EAdD,UAcUV,GAdV,OAcqBE,EAAYC,QAdjC,SAeiBQ,EAAAA,EAAAA,IAAUD,EAAKN,GAfhC,cAeCQ,EAfD,yBAiBEA,EAAQC,KAAKC,SAjBf,kEAoBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAA+BC,EAA/B,+BAA6C,GAC5Cd,EAAc,CAClBe,OAAQ,gBAEJb,EAAU,CACdC,OAAQ,CACNa,MAAOF,EACPV,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYR,GACzB,eAAgB,qBAGdS,EAfD,UAeUV,GAfV,OAeqBE,EAAYe,QAfjC,SAgBkBN,EAAAA,EAAAA,IAAUD,EAAKN,GAhBjC,cAgBCe,EAhBD,yBAkBEA,EAASN,KAAKC,SAlBhB,mE","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/movieSearchAPI.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            <p>{title}</p>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n","import MovieList from 'components/MovieList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/movieSearchAPI';\n\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setTrendingMovies).catch(console.log);\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MovieList movies={trendingMovies} />\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTgwN2RlOWE5YjEzNTg0ZjNhNzFlNjM0M2RkYjRjZSIsInN1YiI6IjYzZDNmYjQyZjE0ZGFkMDBiZDQ4MjE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.b3kkZc4VCGcVeJvumOr9cUF9SnkSJkGMQsfEBPaQeCI';\n\nexport async function getTrendingMovies() {\n  const typeRequest = {\n    trends: 'trending/movie/week',\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.trends}`;\n  const respons = await axios.get(url, options);\n  \n  return respons.data.results;\n}\n\nexport async function getSearchMovie (searchQuery = '') {\n  const typeRequest = {\n    search: 'search/movie',\n  };\n  const options = {\n    params: {\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.search}`;\n  const response = await axios.get(url, options);\n  \n  return response.data.results;\n};\n\nexport async function getMovieDetails (id, type = 'details') {\n  const typeRequestById = {\n    details: `movie/${id}`,\n    credits: `movie/${id}/credits`,\n    reviews: `movie/${id}/reviews`,\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequestById[type]}`;\n  const response = await axios.get(url, options);\n  \n  return response.data;\n};\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","catch","console","log","MovieList","BASE_URL","TOKEN","typeRequest","trends","options","params","language","include_adult","headers","Authorization","url","axios","respons","data","results","getSearchMovie","searchQuery","search","query","response"],"sourceRoot":""}