{"version":3,"file":"static/js/621.7c975f1c.chunk.js","mappings":"0QAGaA,EAAkBC,EAAAA,GAAAA,IAAH,uMAUfC,GAAUD,EAAAA,EAAAA,IAAOE,IAAPF,CAAH,sE,SCgBpB,EAvBqB,WACnB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,EAAS,UACtBO,MAAK,SAAAC,GACJ,IAAMC,EAAQD,EAAKE,QAAQC,QAAO,SAAAC,GAAI,MAAkB,YAAdA,EAAKC,IAAT,IAA6B,GAE/DJ,GACFL,EAAW,iCAAD,OAAkCK,EAAMK,KAErD,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACjB,EAASG,KAGT,SAACP,EAAD,WACE,SAACE,EAAD,CAASoB,IAAKf,EAASgB,MAAM,MAAMC,OAAO,SAGjD,C,mJCzBKC,EAAW,gCACXC,EACJ,sNAEK,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EAAc,CAClBC,OAAQ,uBAEJC,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdJ,EAdD,UAcUG,GAdV,OAcqBG,EAAYC,QAdjC,SAekBO,EAAAA,EAAAA,IAAUd,EAAKQ,GAfjC,cAeCO,EAfD,yBAiBEA,EAASzB,KAAKE,SAjBhB,kEAoBA,SAAewB,IAAtB,4CAAO,OAAP,oBAAO,+GAA8BC,EAA9B,+BAA4C,GAC3CX,EAAc,CAClBY,OAAQ,gBAEJV,EAAU,CACdC,OAAQ,CACNU,MAAOF,EACPP,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdJ,EAfD,UAeUG,GAfV,OAeqBG,EAAYY,QAfjC,SAgBkBJ,EAAAA,EAAAA,IAAUd,EAAKQ,GAhBjC,cAgBCO,EAhBD,yBAkBEA,EAASzB,KAAKE,SAlBhB,mEAqBA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,kGAAwCa,EAAxC,+BAA+C,UAC9CyB,EAAkB,CACtBC,QAAQ,SAAD,OAAWvC,GAClBwC,QAAQ,SAAD,OAAWxC,EAAX,YACPyC,QAAQ,SAAD,OAAWzC,EAAX,YACP0C,OAAO,SAAD,OAAW1C,EAAX,YAEF0B,EAAU,CACdC,OAAQ,CACNC,SAAU,QACVC,eAAe,GAEjBC,QAAS,CACPC,cAAc,UAAD,OAAYT,GACzB,eAAgB,qBAGdJ,EAjBD,UAiBUG,GAjBV,OAiBqBiB,EAAgBzB,IAjBrC,SAkBkBmB,EAAAA,EAAAA,IAAUd,EAAKQ,GAlBjC,cAkBCO,EAlBD,yBAoBEA,EAASzB,MApBX,mE","sources":["components/MovieTrailer/MovieTrailer.styled.js","components/MovieTrailer/MovieTrailer.jsx","services/movieSearchAPI.js"],"sourcesContent":["import ReactPlayer from 'react-player/youtube';\nimport styled from 'styled-components';\n\nexport const MovieTrailerBox = styled.div`\n  display: block;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  \n  position: relative;\n  padding-top: 56.25%; /* Player ratio: 100 / (1280 / 720) */\n`;\n\nexport const Trailer = styled(ReactPlayer)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movieSearchAPI';\nimport { MovieTrailerBox, Trailer} from './MovieTrailer.styled';\n\nconst MovieTrailer = () => {\n  const { movieId } = useParams();\n  const [trailer, setTrailer] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId, 'videos')\n      .then(data => {\n        const video = data.results.filter(item => item.type === 'Trailer')[0];\n\n        if (video) {\n          setTrailer(`https://www.youtube.com/embed/${video.key}`);\n        }\n      })\n      .catch(console.log);\n  }, [movieId, trailer]);\n\n  return (\n      <MovieTrailerBox>\n        <Trailer url={trailer} width=\"70%\" height=\"70%\" />\n      </MovieTrailerBox>\n  );\n};\n\nexport default MovieTrailer;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTgwN2RlOWE5YjEzNTg0ZjNhNzFlNjM0M2RkYjRjZSIsInN1YiI6IjYzZDNmYjQyZjE0ZGFkMDBiZDQ4MjE4ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.b3kkZc4VCGcVeJvumOr9cUF9SnkSJkGMQsfEBPaQeCI';\n\nexport async function getTrendingMovies() {\n  const typeRequest = {\n    trends: 'trending/movie/week',\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.trends}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getSearchMovie(searchQuery = '') {\n  const typeRequest = {\n    search: 'search/movie',\n  };\n  const options = {\n    params: {\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequest.search}`;\n  const response = await axios.get(url, options);\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(movieId, type = 'details') {\n  const typeRequestById = {\n    details: `movie/${movieId}`,\n    credits: `movie/${movieId}/credits`,\n    reviews: `movie/${movieId}/reviews`,\n    videos: `movie/${movieId}/videos`,\n  };\n  const options = {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n    headers: {\n      Authorization: `Bearer ${TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n  const url = `${BASE_URL}${typeRequestById[type]}`;\n  const response = await axios.get(url, options);\n\n  return response.data;\n}\n"],"names":["MovieTrailerBox","styled","Trailer","ReactPlayer","movieId","useParams","useState","trailer","setTrailer","useEffect","getMovieDetails","then","data","video","results","filter","item","type","key","catch","console","log","url","width","height","BASE_URL","TOKEN","getTrendingMovies","typeRequest","trends","options","params","language","include_adult","headers","Authorization","axios","response","getSearchMovie","searchQuery","search","query","typeRequestById","details","credits","reviews","videos"],"sourceRoot":""}